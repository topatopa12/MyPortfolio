---
// src/pages/contact.astro
export const prerender = true; // Set to true for static forms

// Optional: Import a component for custom success message after submission
import SuccessMessage from '../components/SuccessMessage.astro';

// Optional: Client-side JavaScript for handling form submissions (if using fetch)
const handleSubmit = async (event) => {
    event.preventDefault(); // Prevent default browser form submission

    const form = event.target;
    const formData = new FormData(form);

    try {
        const response = await fetch(form.action, {
            method: form.method,
            body: formData,
        });

        if (response.ok) {
            // Success! Redirect to success page or display a message
            window.location.href = form.action; 
        } else {
            // Handle submission error (e.g., display an error message)
            console.error('Form submission failed:', response.statusText);
        }
    } catch (error) {
        console.error('Error submitting form:', error);
    }
};

---

<h1>Contact Us</h1>

<form 
    name="contact" 
    method="POST" 
    data-netlify="true" 
    data-netlify-honeypot="bot-field" 
    action="/success" 
   

>
    <input type="hidden" name="form-name" value="contact" />
    <p class="hidden">
        <label>Don’t fill this out if you’re human: <input name="bot-field" /></label>
    </p>

    <p>
        <label for="name">Name:</label>
        <input type="text" id="name" name="name" required>
    </p>
    <p>
        <label for="name">SurName:</label>
        <input type="text" id="name" name="name" required>
    </p>

    <p>
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required>
    </p>

    <p>
        <label for="message">Message:</label>
        <textarea id="message" name="message" required></textarea>
    </p>

    <p>
        <button type="submit">Send Message</button>
    </p>
</form>

<SuccessMessage /> {/* Optional: Render a success message component after submission */}

<style>
  /* Basic styling for demonstration */
  form {
    max-width: 500px;
    margin: 20px auto;
    padding: 20px;
    border: 1px solid #ccc;
    border-radius: 8px;
  }
  label {
    display: block;
    margin-bottom: 5px;
    font-weight: bold;
  }
  input[type="text"],
  input[type="email"],
  textarea {
    width: 100%;
    padding: 10px;
    margin-bottom: 15px;
    border: 1px solid #ddd;
    border-radius: 4px;
    box-sizing: border-box; /* Ensures padding and border are included in the element's total width and height */
  }
  button {
    background-color: #007bff;
    color: white;
    padding: 10px 20px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
  }
  button:hover {
    background-color: #0056b3;
  }
  .hidden {
    display: none; /* Hide the honeypot field */
  }
</style>

